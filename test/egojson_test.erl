-module(egojson_test).

-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").

simple_decode_test_() ->
    t([
       {<<"1">>, {ok, 1}},
       {<<"12">>, {ok, 12}},
       {<<"12.3">>, {ok, 12.3}},
       {<<"12.34">>, {ok, 12.34}},
       {<<"12e1">>, {ok, 120.0}},
       {<<"12e+1">>, {ok, 120.0}},
       {<<"12e-2">>, {ok, 0.12}},
       {<<"12.34e01">>, {ok, 123.4}},
       {<<"12.34e+01">>, {ok, 123.4}},
       {<<"12.34e-01">>, {ok, 1.234}},

       {<<"-1">>, {ok, -1}},
       {<<"-12">>, {ok, -12}},
       {<<"-12.3">>, {ok, -12.3}},
       {<<"-12.34">>, {ok, -12.34}},
       {<<"-12e1">>, {ok, -120.0}},
       {<<"-12e+1">>, {ok, -120.0}},
       {<<"-12e-2">>, {ok, -0.12}},
       {<<"-12.34e01">>, {ok, -123.4}},
       {<<"-12.34e+01">>, {ok, -123.4}},
       {<<"-12.34e-01">>, {ok, -1.234}},

       {<<"\"a\"">>, {ok, <<"a">>}},
       {<<"\"ab\"">>, {ok, <<"ab">>}},
       {<<"\"ab\\\"\"">>, {ok, <<"ab\"">>}},

       {<<"true">>, {ok, true}},
       {<<"false">>, {ok, false}},
       {<<"null">>, {ok, null}},

       {<<"[]">>, {ok, []}},
       {<<"[1]">>, {ok, [1]}},
       {<<"[1,2]">>, {ok, [1, 2]}},
       {<<"[1,2,3]">>, {ok, [1, 2, 3]}},

       {<<"{}">>, {ok, {[]}}},
       {<<"{\"a\":1}">>, {ok, {[{<<"a">>, 1}]}}},
       {<<"{\"a\":1,\"b\":2}">>, {ok, {[{<<"a">>, 1}, {<<"b">>, 2}]}}}
      ]).

whitespaces_decode_test_() ->
    t([
       {<<"  1  ">>, {ok, 1}},
       {<<"  12  ">>, {ok, 12}},
       {<<"  12.3  ">>, {ok, 12.3}},
       {<<"  12.34  ">>, {ok, 12.34}},
       {<<"  12.34e01  ">>, {ok, 123.4}},
       {<<"  12.34e-01  ">>, {ok, 1.234}},

       {<<"  -1  ">>, {ok, -1}},
       {<<"  -12  ">>, {ok, -12}},
       {<<"  -12.3  ">>, {ok, -12.3}},
       {<<"  -12.34  ">>, {ok, -12.34}},
       {<<"  -12.34e01  ">>, {ok, -123.4}},
       {<<"  -12.34e-01  ">>, {ok, -1.234}},

       {<<"  \"a\"  ">>, {ok, <<"a">>}},
       {<<"  \"ab\"  ">>, {ok, <<"ab">>}},
       {<<"  \"ab\\\"\"  ">>, {ok, <<"ab\"">>}},

       {<<"  true  ">>, {ok, true}},
       {<<"  false  ">>, {ok, false}},
       {<<"  null  ">>, {ok, null}},

       {<<"  [  ]  ">>, {ok, []}},
       {<<"  [  1  ]  ">>, {ok, [1]}},
       {<<"  [  1  ,  2  ]  ">>, {ok, [1, 2]}},
       {<<"  [  1  ,  2  ,  3  ]  ">>, {ok, [1, 2, 3]}},

       {<<"  {  }  ">>, {ok, {[]}}},
       {<<"  {  \"a\"  :  1  }  ">>, {ok, {[{<<"a">>, 1}]}}},
       {<<"  {  \"a\"  :  1  ,  \"b\"  :  2  }  ">>, {ok, {[{<<"a">>, 1}, {<<"b">>, 2}]}}}
      ]).

error_test_() ->
    Tests =
        [
         {<<"">>, 1},
         {<<"1.">>, 3},
         {<<"-">>, 2},
         {<<"\"">>, 2},
         {<<"[">>, 2},
         {<<"{">>, 2},
         {<<"-1.">>, 4},
         {<<"-1.e1">>, 4},
         {<<"-1.0e">>, 6}
        ],
    [{F, fun() -> {error, {P, invalid_json}} = egojson:decode(F) end} || {F, P} <- Tests].

t(Tests) ->
    [{F, fun() -> T = egojson:decode(F) end} || {F, T} <- Tests].

-endif.
